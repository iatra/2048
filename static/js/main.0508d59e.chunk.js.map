{"version":3,"sources":["Tile.js","Board.js","actions/createSquare.js","actions/generateTileHandler.js","actions/getNewGameState.js","actions/moveHandlers.js","Game.js","inputHandlers/touch.js","inputHandlers/keyboard.js","serviceWorker.js","index.js"],"names":["Tile","props","item","value","number","className","isNew","isMerged","Board","i","j","this","squares","key","rowIndex","colIndex","row","map","_col","renderSquare","_row","renderRow","React","Component","CreateSquare","square","copy","newSquare","getRndInteger","min","max","Math","floor","random","generateNewTile","emptyCount","numberOfEmpty","length","getEmptySquaresCount","nextNumber","nextPosition","getNewGameState","size","sqr","Array","fill","isMoved","isStarted","score","rewinds","history","processMove","state","accessors","get","startItem","endItem","canMove","arr","set","getRowObject","index","getLastNonOccupiedIndex","canMerge","merge","mergedSum","occupied","items","mergedTiles","Set","nextIndex","has","add","leftGet","leftSet","upGet","upSet","rightGet","rightSet","downGet","downSet","handleLeft","handleRight","handleUp","handleDown","handleNone","Game","fieldSize","rewind","bind","reset","keyPressed","touchStart","touchEnd","handleTouchMove","event","touch","touches","setState","X","clientX","Y","clientY","handler","touchStartCoordinates","changedTouches","xDiff","yDiff","abs","getTouchHandler","handleMove","keyCode","s","getKeyHandler","splice","writeHistory","target","includes","preventDefault","document","addEventListener","passive","doc","getElementById","removeEventListener","id","onClick","Boolean","window","location","hostname","match","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0508d59e.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Tile(props) {\n  let item = props.value;\n  let number = item ? item.number : null;\n  let className = item ? (item.isNew ? \"squareNew\" : (item.isMerged ? \"squareMerged\" : \"squareOld\")) : \"squareDefault\";\n  return (\n    <span className={className}>\n      {number}\n    </span>\n  );\n}\n\nexport default Tile;","import React from 'react';\r\nimport Tile from './Tile';\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i, j) {\r\n    let item = this.props.squares[i][j];\r\n    return (\r\n      <Tile\r\n        value={item} key={\"sqr\" + i + j} rowIndex={i} colIndex={j}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderRow(rowIndex) {\r\n    const row = this.props.squares[rowIndex];\r\n    return (\r\n      <div className=\"board-row\" key={\"br\" + rowIndex}>{\r\n        row.map((_col, colIndex) => this.renderSquare(rowIndex, colIndex))\r\n      }</div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.squares.map((_row, rowIndex) => this.renderRow(rowIndex))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;","function copy(square) {\n    const newSquare = { number : square.number, isNew : square.isNew, isMerged : square.isMerged, copy : () => copy(newSquare) };\n    return newSquare;\n}\n\nexport function CreateSquare(number) {\n    const square = { number: number, isNew: true, isMerged : false, copy : () => copy(square) };\n    return square;\n}","  import { CreateSquare } from './createSquare';\n\n  function getRndInteger(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) ) + min;\n  }\n\n  function getEmptySquaresCount(squares) {\n    let numberOfEmpty = squares.length * squares[0].length;\n    for (let i = 0; i !== squares.length; i++) {\n      const row = squares[i];\n      for (let j = 0; j !== row.length; j++) {\n        if (row[j]) {\n          numberOfEmpty--;\n        }\n      }\n    }\n    return numberOfEmpty;\n  }\n\n  export function generateNewTile(squares) {\n    let emptyCount = getEmptySquaresCount(squares);\n    if (emptyCount === 0)\n      return squares;\n\n    let nextNumber = getRndInteger(0, 9) === 9 ? 4 : 2; // 10% chance for 4 to appear\n    let nextPosition = getRndInteger(0, emptyCount - 1);\n\n    for (let i = 0; i !== squares.length; i++) {\n      const row = squares[i];\n      for (let j = 0; j !== row.length; j++) {\n        if (row[j]) {\n          continue;\n        }\n\n        if (nextPosition === 0) {\n          squares[i][j] = CreateSquare(nextNumber);\n          return squares;\n        }\n\n        nextPosition--;\n      }\n    }\n  }","import { generateNewTile } from './generateTileHandler';\n\nexport function getNewGameState(size) {\n    let sqr = Array(size).fill().map(() => Array(size).fill(null));\n    sqr = generateNewTile(generateNewTile(sqr));\n\n    return {  \n      squares: sqr,\n      isMoved : false,\n      isStarted : false,\n      score : 0,\n      rewinds : 0,\n      history : []\n    };\n}","  function processMove(state, accessors) {\n\n    if (!canMove(state.squares, accessors)) {\n      return { squares : state.squares, isMoved : false, isStarted : state.isStarted, score : state.score };\n    }\n\n    const squares = state.squares.map(arr => arr.map(square => square ? square.copy() : null));\n    let score = state.score;\n    const length = squares.length;\n\n    const get = accessors.get;\n    const set = accessors.set;\n    for (let i = 0; i !== length; i++) {\n      const row = getRowObject(length);\n\n      for (let j = length - 1; j >= 0; j--) {\n        const item = get(squares, i, j);\n        if (item) {\n          item.isNew = false;\n          item.isMerged = false;\n\n          const index = row.getLastNonOccupiedIndex();\n\n          if (row.canMerge(item)) {\n            row.merge();\n            score = score + row.mergedSum;\n          }\n          else {\n            row.occupied++;\n            row.items[index] = item; \n          }\n        }\n      }\n  \n      for (let j = 0; j !== length; j++) {\n        set(squares, i, j, row.items[j]);\n      }\n    }\n\n    return { squares : squares, isMoved : true, isStarted : true, score : score };\n  }\n\n  function canMove(squares, accessors) {\n    const length = squares.length;\n    const { get } = accessors;\n\n    for (let i = 0; i !== length; i++) {\n      let j = 0;\n      while (j < length - 1) {\n        const startItem = get(squares, i, j);\n        const endItem = get(squares, i, j + 1);\n\n        if (!startItem) {\n          j++;\n          continue;\n        }\n\n        if (!endItem) {\n          return true;\n        }\n\n        if (startItem.number === endItem.number) {\n          return true;\n        }\n\n        j++;\n      }\n    }\n\n    return false;\n  }\n\n  function getRowObject(length) {\n    const row = {\n      length : length,\n      items : new Array(length),\n      occupied : 0,\n      mergedSum : 0,\n      mergedTiles : new Set()\n    };\n\n    row.getLastNonOccupiedIndex = function() { return row.length - row.occupied - 1 };\n\n    row.canMerge = function(item) {\n      if (row.occupied > 0) {\n        const nextIndex = row.getLastNonOccupiedIndex() + 1;\n  \n        // already merged items can't be merged again within the same move\n        if (row.mergedTiles.has(nextIndex)) {\n          return false;\n        }\n  \n        return item.number === row.items[nextIndex].number;\n      }\n  \n      return false;\n    }\n\n    row.merge = function() {\n      const index = row.getLastNonOccupiedIndex() + 1;\n      const item = row.items[index];\n      item.number = item.number * 2;\n      item.isMerged = true;\n      row.items[index] = item;\n      row.mergedTiles.add(index);\n\n      // calculate score\n      row.mergedSum = item.number;\n    }\n\n    return row;\n  }\n  \n  function leftGet(squares, i, j) {\n    return squares[i][squares.length - j - 1];\n  }\n  \n  function leftSet (squares, i, j, item) {\n    squares[i][squares.length - j - 1] = item;\n  };\n  \n  function upGet(squares, i, j) {\n    const length = squares.length;\n    return squares[length - j - 1][i];\n  }\n  \n  function upSet(squares, i, j, item) {\n    const length = squares.length;\n    squares[length - j - 1][i] = item;\n  };\n  \n  function rightGet(squares, i, j) {\n    return squares[i][j];\n  }\n  \n  function rightSet(squares, i, j, item) {\n    squares[i][j] = item;\n  };\n  \n  function downGet(squares, i, j) {\n    return squares[j][i];\n  }\n  \n  function downSet(squares, i, j, item) {\n    squares[j][i] = item;\n  };\n\n  export function handleLeft(state) {\n    const accessors = { get : leftGet, set: leftSet };\n    return processMove(state, accessors);\n  }\n\n  export function handleRight(state) {\n    const accessors = { get : rightGet, set: rightSet };\n    return processMove(state, accessors);\n  }\n\n  export function handleUp(state) {\n    const accessors = { get : upGet, set: upSet };\n    return processMove(state, accessors);\n  }\n\n  export function handleDown(state) {\n    const accessors = { get : downGet, set: downSet };\n    return processMove(state, accessors);\n  }\n\n  export function handleNone(state) {\n    return { squares : state.squares, isMoved : false, isStarted : state.isStarted, score : state.score };\n  }","import React from 'react';\r\nimport Board from './Board';\r\nimport { getNewGameState } from './actions/getNewGameState';\r\nimport { generateNewTile } from './actions/generateTileHandler';\r\nimport { getKeyHandler } from './inputHandlers/keyboard';\r\nimport { getTouchHandler } from './inputHandlers/touch';\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = getNewGameState(props.fieldSize);\r\n    this.rewind = this.rewind.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n    this.keyPressed = this.keyPressed.bind(this);\r\n    this.touchStart = this.touchStart.bind(this);\r\n    this.touchEnd = this.touchEnd.bind(this);\r\n    this.handleTouchMove = this.handleTouchMove.bind(this);\r\n  }\r\n\r\n  touchStart(event) {\r\n    let touch = event.touches[0];\r\n    if (!touch)\r\n      return;\r\n\r\n    this.setState(() => {\r\n      return { touch : { X : touch.clientX, Y : touch.clientY }};\r\n    });\r\n  }\r\n\r\n  touchEnd(event) {\r\n    const handler = getTouchHandler(event, this.state.touch);\r\n    this.handleMove(handler);\r\n  }\r\n\r\n  keyPressed(event) {\r\n    if (event.keyCode === 81) {\r\n      this.rewind();\r\n      return;\r\n    }\r\n    const handler = getKeyHandler(event);\r\n    this.handleMove(handler);\r\n  }\r\n\r\n  rewind() {\r\n    if (this.state.history.length > 0) {\r\n      this.setState((state) => {\r\n        const { squares, score } = state.history[state.history.length - 1];\r\n        state.history.splice(-1, 1);\r\n        return { squares : squares, score : score, rewinds : state.rewinds + 1 };\r\n      });\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.setState(() => {\r\n      return getNewGameState(this.props.fieldSize);\r\n    });\r\n  }\r\n\r\n  writeHistory(state) {\r\n    const { squares, score } = state;\r\n    this.setState(() => {    \r\n      return { history : [...this.state.history, { squares : squares, score : score }] }\r\n    });\r\n  }\r\n\r\n  handleMove(handler) {\r\n    let { squares, isMoved, isStarted, score } = handler(this.state);\r\n    if (isMoved) {\r\n      this.writeHistory({ squares : this.state.squares, score : this.state.score });\r\n      squares = generateNewTile(squares);\r\n      this.setState(() => {\r\n        return { squares : squares, isMoved : isMoved, isStarted : isStarted, score : score };\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    this.setState(() => {\r\n      return { isMoved : false };\r\n    });\r\n  }\r\n\r\n  // just a hack for iOS bouncing effect\r\n  handleTouchMove(event) {\r\n    const className = event.target.className;\r\n    if (className.includes('square')) {\r\n      event.preventDefault();;\r\n      return;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"touchmove\", this.handleTouchMove, { passive : false });\r\n    document.addEventListener(\"keydown\", this.keyPressed, false);\r\n\r\n    const doc = document.getElementById(\"game-board\");\r\n    doc.addEventListener(\"touchstart\", this.touchStart, false);\r\n    doc.addEventListener(\"touchend\", this.touchEnd, false);\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    document.removeEventListener(\"touchmove\", this.handleTouchMove, { passive : false });\r\n    document.removeEventListener(\"keydown\", this.keyPressed, false);\r\n\r\n    const doc = document.getElementById(\"game-board\");\r\n    doc.removeEventListener(\"touchstart\", this.touchStart, false);\r\n    doc.removeEventListener(\"touchend\", this.touchEnd, false);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"game\" id=\"game\">\r\n        <div className=\"game-board\" id=\"game-board\">\r\n          <div className=\"status\">\r\n            <span>Score: {this.state.score}</span>\r\n          </div>\r\n          <div className=\"status\">\r\n            {this.state.rewinds > 0 ? <span>Rewinds used: {this.state.rewinds}</span> : null}\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <span>{(this.state.isStarted && !this.state.isMoved) ? \"Nothing has moved\" : null}</span>\r\n          </div>\r\n          <Board\r\n            squares={this.state.squares}\r\n          />\r\n        </div>\r\n        <div className=\"game-buttons\">\r\n          <ul>\r\n            <button className=\"veryBoringButton\" onClick={this.reset}>New game</button>\r\n            <button className=\"veryBoringButton\" onClick={this.rewind}>Rewind</button>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;","import { handleDown, handleLeft, handleUp, handleRight, handleNone } from '../actions/moveHandlers';\n\nexport function getTouchHandler(event, touchStartCoordinates) {\n    let touch = event.changedTouches[0];\n    if (!touch)\n        return handleNone;\n\n    let xDiff = touch.clientX - touchStartCoordinates.X;\n    let yDiff = touch.clientY - touchStartCoordinates.Y;\n\n    if (Math.abs(xDiff) > Math.abs(yDiff)) {\n\n        if (xDiff > 0) {\n            return handleRight;\n        }\n\n        if (xDiff < 0) {\n            return handleLeft;\n        }\n    }\n    else {\n\n        if (yDiff > 0) {\n            return handleDown;\n        }\n\n        if (yDiff < 0) {\n            return handleUp;\n        }\n    }\n\n    return handleNone;\n}","import { handleDown, handleLeft, handleUp, handleRight, handleNone } from '../actions/moveHandlers';\n\nexport function getKeyHandler(event) {\n    switch (event.keyCode) {\n      case 37:\n        return s => handleLeft(s);\n      case 38:\n        return s => handleUp(s);\n      case 39:\n        return s => handleRight(s);\n      case 40:\n        return s => handleDown(s);\n      default:\n        return s => handleNone(s);\n    }\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Game from './Game';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nrender(\r\n  <Game fieldSize={4} />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}